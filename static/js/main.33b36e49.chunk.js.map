{"version":3,"sources":["components/Pokemons/Pokemons.module.css","components/Pokemons/Pokemon/Pokemon.module.css","assets/Pokemon_logo.svg","components/Loader/Loader.module.css","store/actions.js","store/reducer.js","components/Header/Header.js","components/Loader/Loader.js","components/Pokemons/Pokemon/Pokemon.js","components/Pokemons/Pokemons.js","components/PokemonFullInfo/TableRows/TableRows.js","components/PokemonFullInfo/PokemonFullInfo.js","hoc/Layout.js","App.js","index.js"],"names":["module","exports","get_all_types_success","types","type","typeList","pokemon_loaded_success","pokemonList","initialState","url","typeUrl","typeFiler","nextLink","currentPokemon","reducer","state","action","filtred","showInfo","Header","className","src","logo","alt","Loader","Style","Pokemon","pokemonInfo","didLoad","onClickHandler","props","clicked","getPokemonInfo","a","fetch","response","json","data","setState","this","name","front_default","sprites","reverse","PokemonWrap","onClick","Image","onLoad","PokemonName","Types","map","key","React","Component","Pokemons","getPokemons","getTypes","pokeList","el","showPokemonInfo","Main","PokemonList","LoadMore","PokeballCenter","PokeballCenter_small","connect","dispatch","getPokemonList","results","next","actionCreators","typesList","TableRows","newData","Object","entries","console","log","PokemonFullInfo","pokemon","id","stats","weight","moves","formatedInfo","base_stat","length","close","Layout","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33b36e49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Pokemons_Main__gHovI\",\"Select\":\"Pokemons_Select__3jYxZ\",\"PokemonList\":\"Pokemons_PokemonList__1WFqA\",\"LoadMore\":\"Pokemons_LoadMore__1rfiB\",\"PokeballCenter\":\"Pokemons_PokeballCenter__14oct\",\"PokeballCenter_small\":\"Pokemons_PokeballCenter_small__2eZlp\",\"blink\":\"Pokemons_blink__2wH9L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PokemonWrap\":\"Pokemon_PokemonWrap__5bdyV\",\"PokemonName\":\"Pokemon_PokemonName__3fybq\",\"Image\":\"Pokemon_Image__2XAcw\",\"Types\":\"Pokemon_Types__3RJhi\"};","module.exports = __webpack_public_path__ + \"static/media/Pokemon_logo.605ebff0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__17sQZ\",\"frames\":\"Loader_frames__3ofIf\"};","export const SHOW_POKEMON_INFO = 'SHOW_POKEMON_INFO';\nexport const GET_POKEMONS = 'GET_POKEMONS';\nexport const GET_NEXT_LINK = 'GET_NEXT_LINK';\nexport const GET_ALL_TYPES = 'GET_ALL_TYPES';\nexport const CLOSE_SHOW_POKEMON_INFO = 'CLOSE_SHOW_POKEMON_INFO';\nexport const SORT_BY_TYPE = 'SORT_BY_TYPE';\n\nexport const sort = (value) => {\n  return {\n    type: SORT_BY_TYPE,\n    filtred: value\n  }\n};\n\nexport const get_all_types = (url) => {\n  return dispatch => {\n    const getTypes = async url => {\n      let response = await fetch(url);\n      let data = await response.json();\n      return data;\n    };\n\n    (async () => {\n      let typesList = await getTypes(url);\n      dispatch(get_all_types_success(typesList.results));\n    })();\n  }\n};\n\nexport const get_all_types_success = (types) => {\n  return {\n    type: GET_ALL_TYPES,\n    typeList: types\n  }\n};\n\nexport const close_show_pokemon_info = () => {\n  return {\n    type: CLOSE_SHOW_POKEMON_INFO,\n  }\n};\n\nexport const pokemon_loaded_success = (pokemonList) => {\n  return {\n    type: GET_POKEMONS,\n    pokemonList: pokemonList\n  }\n};\n\nexport const get_next_link = link => {\n  return {\n    type: GET_NEXT_LINK,\n    nextLink: link\n  }\n};\n\nexport const get_pokemon = (url) => {\n  return dispatch => {\n    const getPokemonList = async url => {\n      let response = await fetch(url);\n      let data = await response.json();\n      return data;\n    };\n\n    (async () => {\n      let pokemonList = await getPokemonList(url);\n      dispatch(pokemon_loaded_success(pokemonList.results));\n      dispatch(get_next_link(pokemonList.next))\n    })();\n  }\n};\n\nexport const show_pokemon_info = (pokemon) => {\n  return {\n    type: SHOW_POKEMON_INFO,\n    showInfo: pokemon\n  }\n};","import * as actionTypes from './actions'\n\nconst initialState = {\n  url: 'https://pokeapi.co/api/v2/pokemon/?limit=12',\n  typeUrl: 'https://pokeapi.co/api/v2/type/',\n  pokemonList: '',\n  typeList: '',\n  typeFiler: '',\n  nextLink: '',\n  currentPokemon: ''\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    \n    case actionTypes.SORT_BY_TYPE:\n      return {\n        ...state,\n        typeFiler: action.filtred\n      };\n  \n    case actionTypes.SHOW_POKEMON_INFO:\n      return {\n        ...state,\n        currentPokemon: {\n          ...action.showInfo\n        }\n      };\n\n    case actionTypes.GET_ALL_TYPES:\n      return {\n        ...state,\n        typeList: [...action.typeList]\n      };\n\n    case actionTypes.GET_POKEMONS:\n      return {\n        ...state,\n        pokemonList: [\n          ...state.pokemonList,\n          ...action.pokemonList\n        ]\n      };\n\n    case actionTypes.GET_NEXT_LINK:\n      return {\n        ...state,\n        nextLink: action.nextLink\n      };\n\n    case actionTypes.CLOSE_SHOW_POKEMON_INFO:\n      return {\n        ...state,\n        currentPokemon: ''\n      };\n\n      default:\n        return state\n  }\n};\n\nexport default reducer","import React from 'react';\nimport logo from '../../assets/Pokemon_logo.svg'\n\nconst Header = () => (\n  <header>\n    <div className='Logo'>\n      <img src={logo}\n           alt={logo}\n      />\n    </div>\n  </header>\n);\n\nexport default Header","import React from 'react'\nimport Style from './Loader.module.css'\n\nconst Loader = () =>\n    <div className={Style.Loader}>\n\n    </div>;\n\nexport default Loader","import React from 'react'\nimport Style from './Pokemon.module.css';\nimport Loader from '../../Loader/Loader';\n\nclass Pokemon extends React.Component {\n  \n  state = {\n    pokemonInfo: '',\n    didLoad: false\n  };\n\n  componentDidMount(){\n    const getPokemonInfo = async url => {\n      let response = await fetch(url);\n      let data = await response.json();\n      return data;\n    };\n\n    (async () => {\n      const pokemonInfo = await getPokemonInfo(this.props.url);\n      this.setState({\n        pokemonInfo: pokemonInfo,\n        didLoad: true\n      })\n    })();\n  }\n\n  onClickHandler = () => {\n    this.props.clicked(this.state.pokemonInfo)\n  };\n\n  render(){\n    const {didLoad} = this.state;\n    \n    if(didLoad){\n      const { name } = this.props;\n      const { sprites: {front_default}} = this.state.pokemonInfo;\n      const types = this.state.pokemonInfo.types.reverse();\n\n      return (\n        <div className={`card card--${types[0].type.name}`}>\n\n          <div className={Style.PokemonWrap} onClick={this.onClickHandler}>\n\n            <div className={Style.Image}>\n              { !this.state.didLoad ? <Loader /> : null } \n              <img\n                  src={front_default}\n                  alt={front_default}\n                  onLoad={this.onLoad}\n              />\n            </div>   \n\n            <h4 className={Style.PokemonName}>{name}</h4>\n\n            <div className={Style.Types}>\n              { types.map(type => {\n                return (\n                    <div\n                        key={type.type.name}\n                        className={`type ${type.type.name}`}\n                    >\n                      {type.type.name}\n                    </div>\n                )\n              })}\n            </div>\n\n          </div>\n        </div>\n      )\n    } \n\n    return <Loader />\n  } \n}\n\nexport default Pokemon","import React, {Component} from 'react';\nimport Pokemon from './Pokemon/Pokemon';\nimport Style from './Pokemons.module.css';\nimport Loader from '../Loader/Loader';\n\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../../store/actions';\n\nclass Pokemons extends Component {\n\n    componentDidMount() {\n        this.props.getPokemons(this.props.url);\n        this.props.getTypes(this.props.typeUrl)\n    }\n\n    render() {\n        const {pokemonList, nextLink, getPokemons, typeList} = this.props;\n\n        if (pokemonList && typeList) {\n\n            const pokeList = pokemonList.map(el => {\n                    return (\n                        <Pokemon\n                            key={el.name}\n                            name={el.name}\n                            url={el.url}\n                            clicked={this.props.showPokemonInfo}/>\n                    )\n                }\n            );\n\n            return (\n                <main className={Style.Main}>\n                    <div className={Style.PokemonList}>\n                        {pokeList}\n                    </div>\n\n                    <button\n                        className={Style.LoadMore}\n                        onClick={() => getPokemons(nextLink)}>\n                        <div className={Style.PokeballCenter}>\n                            <div className={Style.PokeballCenter_small}></div>\n                        </div>\n                        Load More ...\n                    </button>\n                </main>\n            )\n        } else {\n            return <Loader/>\n        }\n    }\n}\n\nconst mapStateToProps = ({\n                             url,\n                             pokemonList,\n                             nextLink,\n                             typeUrl,\n                             typeList\n                         }) => ({\n    url,\n    pokemonList,\n    nextLink,\n    typeUrl,\n    typeList\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPokemons: url => dispatch(actionCreators.get_pokemon(url)),\n        showPokemonInfo: (pokemonInfo) => dispatch(actionCreators.show_pokemon_info(pokemonInfo)),\n        getTypes: url => dispatch(actionCreators.get_all_types(url))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokemons)","import React from 'react'\n\nconst TableRows = ({data}) => {\n\n  const newData = Object.entries(data);\n  console.log(newData); // arrays of pokemon info data\n\n  return (\n    <tr>\n      <td>{newData[0][0]}</td>\n      <td>{newData[0][1]}</td>\n    </tr>\n  )\n};\n\nexport default TableRows","import React from 'react';\nimport TableRows from './TableRows/TableRows';\n\nimport './PokemonFullInfo.scss';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../../store/actions'\n\nclass PokemonFullInfo extends React.Component {\n  render(){\n    const { pokemon } = this.props;\n\n    if( !pokemon ) return null;\n\n    \n    const { name, id, stats, weight, moves, types } = pokemon;\n\n    //get pokemon property from incoming array, and set as we want\n    const formatedInfo = [\n      {'Attack': stats[4].base_stat},\n      {'Defense': stats[3].base_stat},\n      {'HP': stats[5].base_stat},\n      {'SP Attack': stats[2].base_stat},\n      {'SP Defence': stats[1].base_stat},\n      {'Speed': stats[0].base_stat},\n      {'Weight': weight},\n      {'Total moves': moves.length}\n    ];\n\n    return (  \n      <div className={`PokemonFullInfo_Wrap_Gradient PokemonFullInfo_Wrap_Gradient--${types[0].type.name}`} onClick={this.props.close}>\n        <div className='PokemonFullInfo_Wrap'>\n          <div className='Image'>\n            <img\n                src={pokemon.sprites.front_default}\n                alt={pokemon.sprites.front_default}\n                onLoad={this.onLoad}\n            />\n          </div>\n          <div className='Info'>\n            <h3 className='Title'>{name} #{id}</h3>\n            <table>         \n              <tbody>\n                { formatedInfo.map( (el, key) => <TableRows key = {key} data = {el} />)}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pokemon: state.currentPokemon\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    close: () => dispatch(actionCreators.close_show_pokemon_info())\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonFullInfo)","import React from 'react';\nimport Header from '../components/Header/Header';\nimport Pokemons from '../components/Pokemons/Pokemons';\nimport PokemonFullInfo from '../components/PokemonFullInfo/PokemonFullInfo';\n\nclass Layout extends React.Component {\n  render(){\n    return (\n      <div className='wrapper'>\n        <Header />\n        <Pokemons />\n        <PokemonFullInfo />\n      </div>\n    )\n  }\n}\n\nexport default Layout","import React, { Fragment, Component }from 'react';\nimport Layout from './hoc/Layout'\n\nclass App extends Component {\n  render(){\n    return (\n      <Fragment>\n        <Layout />\n      </Fragment>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from './store/reducer';\n\nimport './index.scss';\nimport App from './App';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\n\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));"],"sourceRoot":""}